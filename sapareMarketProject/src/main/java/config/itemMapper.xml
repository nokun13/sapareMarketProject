<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="item">
	
	<insert id="crawlingProcess" parameterType="dto.itemDTO">
		insert into SAPAREITEM values(SAPAREITEM_ITEMID_seq.nextval, #{memberName}, #{itemPrice}, #{itemAbout}, #{itemViewCnt}, #{itemName}, #{itemImagePath}, #{itemStatus}, sysdate, #{itemType}, #{itemWantCnt}, #{itemFlagCnt})
	</insert>
	
	<select id="selectProcess" resultType="dto.itemDTO">
		select * from sapareItem
	</select>
	
	<select id="get" parameterType="dto.memberDTO" resultType="dto.itemDTO">
		select a.*, b.orderDate, b.orderPrice, b.orderId, c.reviewNo, c.reviewContent, c.reviewStar, d.profileImg, d.nickname
		from sapareItem a
		left outer join
		    sapareOrder b on a.itemId = b.itemId
		left outer join
		    sapareReview c on b.orderId = c.orderId
		left outer join
		    sapareMember d on b.memberName = d.memberName
		where a.memberName=#{memberName}
		order by a.itemUploadDate desc
	</select>
	
	<select id="getWeek" parameterType="dto.memberDTO" resultType="dto.itemDTO">
		select a.*, b.orderDate, b.orderPrice, b.orderId, c.reviewNo, c.reviewContent, c.reviewStar, d.profileImg, d.nickname
		from sapareItem a
		left outer join
		    sapareOrder b on a.itemId = b.itemId
		left outer join
		    sapareReview c on b.orderId = c.orderId
		left outer join
		    sapareMember d on b.memberName = d.memberName
		where a.memberName=#{memberName} and
        trunc(a.itemUploadDate) BETWEEN trunc(sysdate-7) and trunc(sysdate)
		order by a.itemUploadDate desc
	</select>
	
	<select id="getMonth" parameterType="dto.memberDTO" resultType="dto.itemDTO">
		select a.*, b.orderDate, b.orderPrice, b.orderId, c.reviewNo, c.reviewContent, c.reviewStar, d.profileImg, d.nickname
		from sapareItem a
		left outer join
		    sapareOrder b on a.itemId = b.itemId
		left outer join
		    sapareReview c on b.orderId = c.orderId
		left outer join
		    sapareMember d on b.memberName = d.memberName
		where a.memberName=#{memberName, jdbcType=VARCHAR} and
        trunc(a.itemUploadDate) BETWEEN trunc(sysdate-30) and trunc(sysdate)
		order by a.itemUploadDate desc
	</select>
	
	<select id="getSixMonths" parameterType="dto.memberDTO" resultType="dto.itemDTO">
		select a.*, b.orderDate, b.orderPrice, b.orderId, c.reviewNo, c.reviewContent, c.reviewStar, d.profileImg, d.nickname
		from sapareItem a
		left outer join
		    sapareOrder b on a.itemId = b.itemId
		left outer join
		    sapareReview c on b.orderId = c.orderId
		left outer join
		    sapareMember d on b.memberName = d.memberName
		where a.memberName=#{memberName} and
        trunc(a.itemUploadDate) BETWEEN trunc(sysdate-180) and trunc(sysdate)
		order by a.itemUploadDate desc
	</select>
	
	<select id="wantItem" parameterType="dto.memberDTO" resultType="dto.itemDTO">
		select z.*
        from(
        select b.*
		from saparewantitem a
		inner join sapareitem b on b.itemId=a.itemId
		where a.memberName=#{memberName}
		order by b.itemId desc)z
        where lower(membername) like lower('%'||#{searchWord, jdbcType=VARCHAR}||'%')
        or lower(itemprice) like lower('%'||#{searchWord, jdbcType=VARCHAR}||'%')
        or lower(itemabout) like lower('%'||#{searchWord, jdbcType=VARCHAR}||'%')
        or lower(itemname) like lower('%'||#{searchWord, jdbcType=VARCHAR}||'%')
        order by itemuploaddate desc
	</select>
	
	<select id="wantNumItem" parameterType="dto.memberDTO" resultType="dto.itemDTO">
		select z.*
        from(
        select b.*
		from saparewantitem a
		inner join sapareitem b on b.itemId=a.itemId
		where a.memberName=#{memberName}
		order by b.itemId desc)z
        where lower(membername) like lower('%'||#{searchWord, jdbcType=VARCHAR}||'%')
        or lower(itemprice) like lower('%'||#{searchWord, jdbcType=VARCHAR}||'%')
        or lower(itemabout) like lower('%'||#{searchWord, jdbcType=VARCHAR}||'%')
        or lower(itemname) like lower('%'||#{searchWord, jdbcType=VARCHAR}||'%')
        order by itemwantcnt desc
	</select>
	
	<select id="wantPriceItem" parameterType="dto.memberDTO" resultType="dto.itemDTO">
		select z.*
        from(
        select b.*
		from saparewantitem a
		inner join sapareitem b on b.itemId=a.itemId
		where a.memberName=#{memberName}
		order by b.itemprice asc)z
        where lower(membername) like lower('%'||#{searchWord, jdbcType=VARCHAR}||'%')
        or lower(itemprice) like lower('%'||#{searchWord, jdbcType=VARCHAR}||'%')
        or lower(itemabout) like lower('%'||#{searchWord, jdbcType=VARCHAR}||'%')
        or lower(itemname) like lower('%'||#{searchWord, jdbcType=VARCHAR}||'%')
        order by itemprice asc
	</select>
	
	<select id="sellingOnly" parameterType="dto.memberDTO" resultType="dto.itemDTO">
		select a.*, b.orderDate, b.orderPrice, b.orderId, c.reviewNo, c.reviewContent, c.reviewStar, d.profileImg, d.nickname
		from sapareItem a
		left outer join
		    sapareOrder b on a.itemId = b.itemId
		left outer join
		    sapareReview c on b.orderId = c.orderId
		left outer join
		    sapareMember d on b.memberName = d.memberName
		where a.memberName=#{memberName} and
        a.itemStatus = 'y'
		order by a.itemUploadDate desc
	</select>
	
	<select id="soldOnly" parameterType="dto.memberDTO" resultType="dto.itemDTO">
		select a.*, b.orderDate, b.orderPrice, b.orderId, c.reviewNo, c.reviewContent, c.reviewStar, d.profileImg, d.nickname
		from sapareItem a
		left outer join
		    sapareOrder b on a.itemId = b.itemId
		left outer join
		    sapareReview c on b.orderId = c.orderId
		left outer join
		    sapareMember d on b.memberName = d.memberName
		where a.memberName=#{memberName} and
        a.itemStatus = 'n'
		order by a.itemUploadDate desc
	</select>
	
	<select id="sellSearch" parameterType="dto.memberDTO" resultType="dto.itemDTO">
		select z.*
            from (select a.*, b.orderDate, b.orderPrice, b.orderId, c.reviewNo, c.reviewContent, c.reviewStar,d.profileImg, d.nickname
		from sapareItem a
		left outer join
		    sapareOrder b on a.itemId = b.itemId
		left outer join
		    sapareReview c on b.orderId = c.orderId
		left outer join
		    sapareMember d on b.memberName = d.memberName
		where a.memberName=#{memberName}
		order by a.itemId desc) z
        where lower(itemname) like lower('%'||#{searchWord}||'%')
        or lower(itemabout) like lower('%'||#{searchWord}||'%')
        or lower(membername) like lower('%'||#{searchWord}||'%')
        or lower(itemprice) like lower('%'||#{searchWord}||'%')
        order by itemuploaddate desc
	</select>
	
	<select id="searchItem" parameterType="dto.itemDTO" resultType="dto.itemDTO">
		select * from sapareItem
		where lower(itemName) like lower
		('%'||#{searchWord}||'%')
	</select>
	
	<select id="category" parameterType="dto.itemDTO" resultType="dto.itemDTO">
		select * from sapareItemcategory
		where ITEMBIGCAT like
		'%'||#{searchWord}||'%'
	</select>
	
	<select id="itemView" parameterType="int" resultType="dto.itemDTO">
		select *
		from sapareItem
		where itemId =#{itemId}
	</select>

	<select id="itemCat" parameterType="int" resultType="dto.itemCategoryDTO">
		select *
		from sapareitemcategory
		where itemId=#{itemId}
	</select>

	<!-- 삭제 -->
	<delete id="deleteItem">
		delete from sapareItem
		where itemId=#{itemId}
	</delete>

	<select id="currItem" parameterType="dto.memberDTO" resultType="dto.itemDTO">
		select itemid from sapareitem where membername=#{memberName} order by
		itemuploaddate desc
	</select>

	<update id="addWantCnt" parameterType="dto.memberDTO">
		update sapareitem set itemwantcnt = itemwantcnt + 1 where itemid=#{itemId}
	</update>
	
	<update id="subtWantCnt" parameterType="dto.memberDTO">
		update sapareitem set itemwantcnt = itemwantcnt - 1 where itemid=#{itemId}
	</update>
	
	<update id="updateViewCnt" parameterType="int">
		update sapareItem
		set itemViewCnt = itemViewCnt +1
		where itemId=#{itemId}
	</update>
	
	<insert id="itemUpload" parameterType="dto.itemDTO">
		INSERT ALL
		INTO SAPAREITEM
		VALUES(SAPAREITEM_ITEMID_seq.nextval,'cust',#{itemPrice},#{itemAbout,jdbcType=VARCHAR},0,#{itemName},#{itemImagePath,jdbcType=VARCHAR},'y',to_char(SYSDATE,'yyyy.mm.dd
		hh24:mi:ss'),'중고',0,0)
		INTO SAPAREITEMCATEGORY
		VALUES(SAPAREITEM_ITEMID_SEQ.currval,'cust',#{itemBigCat},#{itemMidCat},#{itemSmallCat},#{itemCity},'o','o')
		SELECT * FROM dual
	</insert>

	<select id="itemFirst" resultType="dto.itemDTO">
		SELECT a.*,b.*, c.membername,
		c.profileimg, c.nickname, d.memberrank
		FROM SAPAREITEM a
		LEFT OUTER JOIN SAPAREITEMCATEGORY b ON a.ITEMID = b.ITEMID
		LEFT OUTER JOIN SAPAREMEMBER c ON c.MEMBERNAME = a.MEMBERNAME
		LEFT OUTER JOIN SAPAREMEMBERSTATUS d ON d.MEMBERNAME = c.MEMBERNAME
		WHERE A.ITEMID=(SELECT MAX(ITEMID) FROM SAPAREITEM)
	</select>

	<select id="countCategory" resultType="dto.itemCategoryDTO">
		SELECT ITEMBIGCAT, COUNT(*) ITEMID FROM SAPAREITEMCATEGORY
		GROUP BY ITEMBIGCAT;
	</select>
	
</mapper>